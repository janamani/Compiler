%!PS-Adobe-3.0 EPSF-3.0
%%Title: 10SFADCSpeed.ps
%%Creator: XCircuit v3.7 rev26
%%CreationDate: Sat Dec  1 10:52:41 2012
%%Pages: 1
%%BoundingBox: 68 68 604 382
%%DocumentNeededResources: font Helvetica Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.000 0 0 pinlabel
endgate
} def

/generic::circle {
% trivial
begingate
1 1.000 16 0 6 0.000 360.000 xcarc
1 1.000 0 0 10 0 2 polygon
1.000 0.000 0.000 scb
(out) {/Times-Roman cf} 2 4 0 1.000 16 0 pinlabel
(out) {/Times-Roman cf} 2 7 0 1.000 0 0 pinlabel
endgate
} def

/generic::jumper {
% trivial
begingate
1 1.000 0 0 10 -90.000 90.000 xcarc
1 1.000 0 10 0 16 2 polygon
1 1.000 0 -10 0 -16 2 polygon
1.000 0.000 0.000 scb
(a) {/Times-Roman cf} 2 1 0 1.000 0 16 pinlabel
(a) {/Times-Roman cf} 2 13 0 1.000 0 -16 pinlabel
endgate
} def


%%EndSetup

%%Page: FlashADCIncrasedSpeed 1
%%PageOrientation: Portrait
/pgsave save def bop
1.0000 inchscale
2.6000 setlinewidth 1069 656 translate

17 1.000 240 320 240 192 -96 192 -96 320 240 320 5 polygon
1.000 90 -544 -368 generic::arrowhead
1.000 0 -48 128 generic::dot
(in) {ss} (V) {/Times-Roman cf} 4 16 0 0.750 -848 -368 label
(Comparator Array) {/Times-Roman cf} 2 16 90 0.750 -48 16 label
(TC to BC Decoder) {/Times-Roman cf} 2 16 90 0.750 128 32 label
17 1.000 -96 64 16 64 16 -240 -96 -240 -96 64 5 polygon
1 1.000 416 16 368 16 2 polygon
1 1.000 416 -224 368 -224 2 polygon
1 1.000 416 -192 368 -192 2 polygon
1 1.000 416 -112 368 -112 2 polygon
1 1.000 416 -80 368 -80 2 polygon
(0) {ss} (B) {/Times-Roman cf} 4 16 0 0.750 432 -224 label
(1) {ss} (B) {/Times-Roman cf} 4 16 0 0.750 432 -192 label
5 0.500 16 192 16 128 -192 128 -192 80 4 polygon
17 1.000 256 64 368 64 368 -240 256 -240 256 64 5 polygon
17 1.000 80 64 192 64 192 -240 80 -240 80 64 5 polygon
(Demux & Latch Array) {/Times-Roman cf} 2 16 90 0.750 304 48 label
1 1.000 16 32 80 32 2 polygon
1 1.000 16 0 80 0 2 polygon
1 1.000 16 -224 80 -224 2 polygon
1 1.000 16 -192 80 -192 2 polygon
1 1.000 192 -192 256 -192 2 polygon
1 1.000 192 -224 256 -224 2 polygon
1 1.000 192 32 256 32 2 polygon
1 1.000 192 0 256 0 2 polygon
(. . . . . .) {/Times-Roman cf} 2 16 90 1.000 48 -32 label
(. . . . . .) {/Times-Roman cf} 2 16 90 1.000 224 -16 label
(1) {ss} (T) {/Times-Roman cf} 4 16 0 0.500 32 -256 label
(-1) {ns} (N) {Ss} (T) {/Times-Roman cf} 6 16 0 0.500 32 48 label
(1) {ss} (L) {/Times-Roman cf} 4 16 0 0.500 208 -256 label
(N-1) {ss} (L) {/Times-Roman cf} 4 16 0 0.500 208 48 label
5 0.500 80 192 80 128 2 polygon
1.000 180 -48 64 generic::arrowhead
1.000 180 272 64 generic::arrowhead
(Output) {/Times-Roman cf} 2 16 270 0.750 528 -144 label
(Comp) {/Times-Roman cf} 2 16 360 0.750 -32 96 label
1 1.000 -96 288 -784 288 2 polygon
1.000 180 -784 -368 generic::circle
1.000 180 -785 289 generic::circle
(Start) {/Times-Roman cf} 2 16 180 0.750 -817 303 label
(Latch) {/Helvetica cf} 2 16 360 0.750 80 96 label
17 1.000 -272 64 -160 64 -160 -240 -272 -240 -272 64 5 polygon
1 1.000 -160 32 -96 32 2 polygon
1 1.000 -160 0 -96 0 2 polygon
1 1.000 -160 -224 -96 -224 2 polygon
1 1.000 -160 -192 -96 -192 2 polygon
(. . . . . .) {/Times-Roman cf} 2 16 90 1.000 -128 -32 label
(1) {ss} (R) {/Times-Roman cf} 4 16 0 0.500 -144 -256 label
(-1) {ns} (N) {Ss} (R) {/Times-Roman cf} 6 16 0 0.500 -144 48 label
1.000 180 -192 64 generic::arrowhead
(Resistor Ladder Ckt) {/Times-Roman cf} 2 16 90 0.750 -224 32 label
5 0.500 -48 128 -48 128 -48 128 -48 80 4 polygon
17 1.000 -416 144 -416 16 -752 16 -752 144 -416 144 5 polygon
(DAC) {/Times-Roman cf} 2 16 0 0.750 -624 64 label
(0) {ss} (B) {/Times-Roman cf} 4 16 270 0.750 -465 179 label
(1) {ss} (B) {/Times-Roman cf} 4 16 270 0.750 -497 179 label
(2) {ss} (B) {/Times-Roman cf} 4 16 270 0.750 -530 175 label
(. . . . .) {/Times-Roman cf} 2 16 360 1.000 -656 160 label
(Output) {/Times-Roman cf} 2 16 180 0.750 -528 256 label
1 1.000 -720 176 -720 144 2 polygon
1 1.000 -688 176 -688 144 2 polygon
1 1.000 -528 176 -528 144 2 polygon
1 1.000 -496 176 -496 144 2 polygon
1 1.000 -464 176 -464 144 2 polygon
(Controller Circuit) {/Times-Roman cf} 2 16 0 0.750 -32 240 label
(Difference Quantificator ) {/Times-Roman cf} 2 16 90 0.750 -496 -112 label
17 1.000 -544 -96 -432 -96 -432 -432 -544 -432 -544 -96 5 polygon
1 1.000 -784 -368 -560 -368 2 polygon
1 1.000 -640 16 -640 -176 -560 -176 3 polygon
1 1.000 -432 -304 -48 -304 -48 -256 3 polygon
1.000 90 -544 -176 generic::arrowhead
1.000 360 -48 -240 generic::arrowhead
(r) {ss} (V) {/Times-Roman cf} 4 16 360 0.750 -626 -161 label
1.000 90 -96 256 generic::arrowhead
1 2.000 240 224 416 224 2 polygon
1.000 90 432 224 generic::arrowhead
(Timer) {/Times-Roman cf} 2 16 360 0.750 430 223 label
1.000 90 -96 288 generic::arrowhead
1 1.000 416 288 240 288 2 polygon
(Ready) {/Times-Roman cf} 2 16 180 0.750 511 303 label
1.000 90 432 288 generic::arrowhead
1.000 90 -96 224 generic::arrowhead
(Control) {/Times-Roman cf} 2 16 180 0.750 -225 207 label
1.000 90 -336 -16 generic::jumper
1.000 90 -336 -80 generic::jumper
1 1.000 -320 -80 -304 -80 -304 -272 -240 -272 -240 -240 5 polygon
1 1.000 -320 -16 -304 -16 -304 112 -240 112 -240 64 5 polygon
1 1.000 -384 -16 -496 -16 -496 16 3 polygon
1 1.000 -384 -80 -560 -80 -560 16 3 polygon
(N) {ss} (B) {/Times-Roman cf} 4 16 0 0.750 432 -80 label
(N-1) {ss} (B) {/Times-Roman cf} 4 16 0 0.750 432 -112 label
(2N-1) {ss} (B) {/Times-Roman cf} 4 16 0 0.750 432 16 label
(2N-2) {ss} (B) {/Times-Roman cf} 4 16 270 0.750 -688 176 label
(2N-1) {ss} (B) {/Times-Roman cf} 4 16 270 0.750 -720 176 label
1 1.000 -64 192 -64 160 -64 144 -320 144 4 polygon
1 1.000 -400 80 -416 80 2 polygon
1.000 270 -336 144 generic::jumper
5 0.500 -432 -160 -336 -160 -336 224 -336 224 -96 224 5 polygon
0.600 0.600 0.600 scb
3 0.500 -784 352 -784 -464 400 -464 400 352 -784 352 5 polygon
sce
1.000 360 -240 -240 generic::arrowhead
1.000 180 -240 64 generic::arrowhead
1.000 270 -416 80 generic::arrowhead
1 1.000 -400 80 -384 80 2 polygon
5 0.500 272 96 272 128 80 128 3 polygon
1.000 180 336 64 generic::arrowhead
5 0.500 336 96 336 160 144 160 3 polygon
5 0.500 144 192 144 160 2 polygon
(Demux) {/Helvetica cf} 2 16 360 0.750 272 176 label
1 1.000 -352 144 -368 144 -368 80 -384 80 4 polygon
1 1.000 -352 -16 -384 -16 2 polygon
1 1.000 -352 -80 -384 -80 2 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
